// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package providers

import (
	"context"
	"github.com/MigAru/poseidon/internal/blob"
	"github.com/MigAru/poseidon/internal/ping"
	"github.com/MigAru/poseidon/internal/registry/base"
	"github.com/MigAru/poseidon/internal/registry/manifest"
)

// Injectors from wire.go:

func InitializeBackend(ctx context.Context) (Backend, func(), error) {
	config, err := ProvideConfigFromEnv()
	if err != nil {
		return Backend{}, nil, err
	}
	logger, cleanup, err := ProvideNewLogger(config)
	if err != nil {
		return Backend{}, nil, err
	}
	pingController := ping.NewPingController()
	fs := ProvideFileSystem(config)
	fileSystem := ProvideFileSystemDigestRepository()
	controller := blob.NewController(logger, fs, fileSystem)
	baseController := base.NewController(logger)
	repositoryFileSystem := ProvideFileSystemManifestRepository()
	manifestController := manifest.NewController(logger, repositoryFileSystem, fileSystem)
	server := ServerProvider(config, logger, pingController, controller, baseController, manifestController)
	backend, err := BackendServiceProvider(ctx, server)
	if err != nil {
		cleanup()
		return Backend{}, nil, err
	}
	return backend, func() {
		cleanup()
	}, nil
}

// wire.go:

type Backend struct{}
