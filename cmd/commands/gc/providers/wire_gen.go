// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package providers

import (
	"context"
	"github.com/MigAru/poseidon/internal/config"
	"github.com/MigAru/poseidon/internal/file_system"
	"github.com/MigAru/poseidon/internal/gc"
	"github.com/MigAru/poseidon/internal/redis"
)

// Injectors from wire.go:

func InitializeApp(ctx context.Context) (App, func(), error) {
	configConfig, err := config.NewFromEnv()
	if err != nil {
		return App{}, nil, err
	}
	fs := file_system.New(configConfig)
	redisRedis, cleanup, err := redis.New(configConfig)
	if err != nil {
		return App{}, nil, err
	}
	gcGC := gc.New(ctx, configConfig, fs, redisRedis)
	app, cleanup2, err := AppProvider(ctx, gcGC)
	if err != nil {
		cleanup()
		return App{}, nil, err
	}
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}

// wire.go:

type App struct{}
