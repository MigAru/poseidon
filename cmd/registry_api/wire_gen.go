// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package registry_api

import (
	"github.com/urfave/cli/v2"
	"poseidon/internal/ping"
	"poseidon/internal/registry/base"
	"poseidon/internal/registry/blob"
)

// Injectors from wire.go:

func InitializeBackend(ctx *cli.Context) (Backend, func(), error) {
	config := ProvideConfigFromCliContext(ctx)
	logger, cleanup, err := ProvideNewLogger(config)
	if err != nil {
		return Backend{}, nil, err
	}
	pingController := ping.NewPingController()
	fileSystemRepository := ProvideFileSystemBlobRepository()
	digestFileSystemRepository := ProvideFileSystemDigestRepository()
	controller := blob.NewController(logger, fileSystemRepository, digestFileSystemRepository)
	baseController := base.NewController(logger)
	httpServer := ServerProvider(config, logger, pingController, controller, baseController)
	backend, err := BackendServiceProvider(httpServer)
	if err != nil {
		cleanup()
		return Backend{}, nil, err
	}
	return backend, func() {
		cleanup()
	}, nil
}

// wire.go:

type Backend struct{}
